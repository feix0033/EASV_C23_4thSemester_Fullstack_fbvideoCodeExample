{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./fire.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction AppComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"json\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const m_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, m_r1), \"\\n\");\n  }\n}\n/**\n * This is the decorator with '@' will connect the component class to html and css,\n * \"selector\" is point the which tag from uplevel html can use this component\n * \"templateUrl\" will point which html file connect this component\n * \"styleUrls\" will point which css files connnect this component\n  */\n/**\n * The main part of component can contain the component variables and constructor and methods.\n */\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    /**\n     * component constructor using dependency injection to use all the method from service.\n     * in here because the service use singleton pattern for Service, so in stack there only one instance.\n     * therefore we have to use dependency injection to invoke this instance.\n     *\n     * we don't actually call any method right here from the service. we just inject multiple service to make the angular\n     * parameter form html file can use those injected service's method.\n     *\n     * @param fireService\n     */\n    constructor(fireService) {\n      this.fireService = fireService;\n      this.title = 'frontend';\n    }\n  }\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FireService));\n  };\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"Hello Welcome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_2_listener($event) {\n          return ctx.sendThisMessage = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_3_listener() {\n          return ctx.fireService.sendMessage(ctx.sendThisMessage);\n        });\n        i0.ɵɵtext(4, \"Send Message\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, AppComponent_p_5_Template, 3, 3, \"p\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.sendThisMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fireService.message);\n      }\n    },\n    dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i2.JsonPipe]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}